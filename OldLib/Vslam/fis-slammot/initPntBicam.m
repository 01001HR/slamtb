function [Rob,Cam] = initPntBicam(Rob,Cam,vRay,Obs,alpha,patchSize,lostPntTh)

global  Lmk

% get 3d point - left camera frame
p3d = invBiCamPhoto(...
    Cam(1),...
    Cam(2),...
    Obs(1).y,...
    Obs(2).y);

% get depth
Dpt.s = p3d(3);
Dpt.S = (alpha*Dpt.s)^2;

% Initialize point at depth s with
% observation of camera 1
% Obs.y      = Obs(1).y;
i          = getFree([Lmk.Pnt.used]);
Lmk.Pnt(i) = pntInit(...
    Lmk.Pnt(i),...
    Rob,...
    Cam(1),...
    Obs(1),...
    Dpt,...
    patchSize,...
    lostPntTh);

% Project onto camera 2
Lmk.Pnt(i) = projectPnt(...
    Rob,...
    Cam(2),...
    Lmk.Pnt(i),...
    Obs(2).R);

% Complete point statistics and flags
% Obs(2).y   = vRay.Prj(2).y;
Lmk.Pnt(i) = uPntInnovation(...
    Lmk.Pnt(i),...
    2,...
    Obs(2).y,...
    Obs(2).R);
Lmk.Pnt(i).Prj(2).y       = Obs(2).y;
Lmk.Pnt(i).Prj(2).matched = 1;
Lmk.Pnt(i).Prj(2).updated = 1;

% correct map
[Rob,Cam(2)] = lmkCorrection(...
    Rob,...
    Cam(2),...
    Lmk.Pnt(i));

