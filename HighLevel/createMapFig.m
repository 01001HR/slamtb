function MapFig = createMapFig(Rob,Sen,Lmk,SimRob,SimSen,SimLmk,Figures)

% CREATEMAPFIG  Create 3D map figure and handles.
%   MAPFIG = CREATEMAPFIG(Rob,Sen,Lmk,SimRob,SimSen,SimLmk,MapFigure)
%   creates the map figure in figure 1, containing the following graphics
%   objects:
%       - a grid representing the ground
%       - simulated robots and sensors - in green
%       - estimated robots and sensors - in blue
%       - simulated landmarks (virtual world) - in red
%       - estimated landmarks, containing mean and uncertainty ellipsoid - in
%       colors depending on the landmark type.
%
%   The output MAPFIG is a structure of handles to all these graphics
%   objects. See the Matlab documentation for information about graphics
%   handles and the way to efficiently manipulate graphics. MAPFIG has the
%   following fields:
%       .fig    handle to the figure
%       .axes   handle to the axes
%       .simRob array of handles to the simulated robots 'patch' objects
%       .simSen array of handles to the simulated sensors 'patch' objects
%       .simLmk handle to the simulated landmarks 'line' object
%       .estRob array of handles to the estimated robots 'patch' objects
%       .estSen array of handles to the estimated sensors 'patch' objects
%       .estLmk array of structures with handles to the estimated landmarks, with
%           .mean       handle to the ellipsoid's center 'line' object
%           .ellipse    handle to the ellipsoid's contour 'line' object
%
%   The figure is updated using drawMapFig.
%
%   See also DRAWMAPFIG, CREATESENFIG, MAPOBSERVER, LINE, PATCH, SURFACE,
%   SET, GET.



% Figure
MapFig.fig = figure(99);
moreindatatip
clf
set(MapFig.fig,...
    'numbertitle', 'off',...
    'name',        '3D Map',...
    'doublebuffer','on',...
    'renderer',    Figures.renderer,...
    'toolbar',     'none',...
    'color',       'w');
cameratoolbar('show');
cameratoolbar('setmode','orbit');

% Map viewpoint
viewPnt       = mapObserver(SimLmk,Figures.mapView);

% Axes
axis equal
MapFig.axes = gca;
set(MapFig.axes,...
    'parent',             MapFig.fig,...
    'position',           [ 0 0 1 1],...
    'drawmode',           'fast',...
    'nextplot',           'replacechildren',...
    'projection',         Figures.mapProj,...
    'CameraPosition',     viewPnt.X,...
    'CameraPositionMode', 'manual',...
    'CameraUpVector',     viewPnt.upvec,...
    'CameraUpVectorMode', 'manual',...
    'CameraViewAngle',    viewPnt.fov,...
    'CameraViewAngleMode','manual',...
    'CameraTarget',       viewPnt.tgt,...
    'CameraTargetMode',   'manual',...
    'xlim',               [SimLmk.xMin SimLmk.xMax],...
    'ylim',               [SimLmk.yMin SimLmk.yMax],...
    'zlim',               [SimLmk.zMin SimLmk.zMax],...
    'xcolor',             Figures.colors.backgnd,...
    'ycolor',             Figures.colors.backgnd,...
    'zcolor',             Figures.colors.backgnd,...
    'color' ,             Figures.colors.backgnd);

% SIMULATED OBJECTS
% Ground
[x,y] = meshgrid(SimLmk.xMin:2:SimLmk.xMax,SimLmk.yMin:2:SimLmk.yMax);
z = zeros(size(x));
MapFig.ground = surface(...
    'parent',     MapFig.axes,...
    'XData',      x,...
    'YData',      y,...
    'ZData',      z,...
    'FaceColor',  'none',...
    'EdgeColor',  [.6 .8 .8],...
    'Marker',     'none');

% Robots
for rob = 1:numel(SimRob)
    switch SimRob(rob).type
        case 'atrv'
            robGraph = thickVehicle(0.8);
        otherwise
            error('??? Unknown robot type ''%s''.',SimRob(rob).type);
    end
            
    % Simulated - green
    MapFig.simRob(rob) = patch(...
        'parent',       MapFig.axes,...
        'vertices',     robGraph.vert,...
        'faces',        robGraph.faces,...
        'facecolor',    Figures.colors.simu,...
        'visible',      'on',...
        'userdata',     robGraph);

    MapFig.simRob(rob) = drawObject(MapFig.simRob(rob),SimRob(rob));
    % Sensors
    for sen = SimRob(rob).sensors
        switch SimSen(sen).type
            case 'pinHole'
                senGraph = camGraphics(0.1);
            otherwise
                error('??? Unknown sensor type ''%s''.',SimSen(sen).type);
        end
        % Simulated - green
        MapFig.simSen(sen) = patch(...
            'parent',       MapFig.axes,...
            'vertices',     senGraph.vert,...
            'faces',        senGraph.faces,...
            'facecolor',    Figures.colors.simu,...
            'visible',      'on',...
            'userdata',     senGraph);

        F = composeFrames(SimRob(rob).frame,SimSen(sen).frame);
        MapFig.simSen(sen) = drawObject(MapFig.simSen(sen),SimSen(sen),F);
    end
end



% landmarks - do not loop, draw all at once
MapFig.simLmk = line(...
    'xdata',        SimLmk.points(1,:),...
    'ydata',        SimLmk.points(2,:),...
    'zdata',        SimLmk.points(3,:),...
    'color',        Figures.colors.raw,...
    'linestyle',    'none',...
    'marker',       '+');


% ESTIMATED OBJECTS
% robots
for rob = 1:numel(Rob)
    switch Rob(rob).type
        case 'atrv'
            robGraph = thickVehicle(0.8);
        otherwise
            error('??? Unknown robot type ''%s''.',Rob(rob).type);
    end
    % Estimated - blue
    MapFig.estRob(rob) = patch(...
        'parent',       MapFig.axes,...
        'vertices',     robGraph.vert,...
        'faces',        robGraph.faces,...
        'facecolor',    Figures.colors.est,...
        'visible',      'on',...
        'userdata',     robGraph);

    MapFig.estRob(rob) = drawObject(MapFig.estRob(rob),Rob(rob));

    % sensors
    for sen = Rob(rob).sensors
        switch SimSen(sen).type
            case 'pinHole'
                senGraph = camGraphics(0.1);
            otherwise
                error('??? Unknown sensor type ''%s''.',SimSen(sen).type);
        end
        % Estimated - blue
        MapFig.estSen(sen) = patch(...
            'parent',       MapFig.axes,...
            'vertices',     senGraph.vert,...
            'faces',        senGraph.faces,...
            'facecolor',    Figures.colors.est,...
            'visible',      'on',...
            'userdata',     senGraph);

        F = composeFrames(Rob(rob).frame,Sen(sen).frame);
        MapFig.estSen(sen) = drawObject(MapFig.estSen(sen),Sen(sen),F);

    end
end


% landmarks
for lmk = 1:numel(Lmk)

    MapFig.estLmk(lmk).mean = line(...
        'parent',       MapFig.axes,...
        'xdata',        [],...
        'ydata',        [],...
        'zdata',        [],...
        'linestyle',    'none',...
        'marker',       '.',...
        'visible',      'off');

    MapFig.estLmk(lmk).ellipse = line(...
        'parent',       MapFig.axes,...
        'xdata',        [],...
        'ydata',        [],...
        'zdata',        [],...
        'linestyle',    '-',...
        'marker',       'none',...
        'visible',      'off');

    MapFig.estLmk(lmk).label = text(...
        'parent',              MapFig.axes,...
        'position',            [50 50],...
        'string',              num2str(lmk),...
        'color',               Figures.colors.label,...
        'fontweight',          'demi',...
        'horizontalalignment', 'center',...
        'visible',             'off');
end



