function MapFig = createMapFig(Rob,Sen,Lmk,SimRob,SimSen,SimLmk,MapFigure)

% Figure
MapFig.fig = figure(1);
clf
set(MapFig.fig,...
    'doublebuffer','on',...
    'renderer',MapFigure.renderer,...
    'toolbar','none',...
    'color','w');
cameratoolbar('show');
cameratoolbar('setmode','orbit');

% Map viewpoint
viewPnt       = mapObserver(SimLmk,MapFigure.view);

% Axes
axis equal
MapFig.axes = gca;
set(MapFig.axes,...
    'parent',MapFig.fig,...
    'position',[0 0 1 1],...
    'drawmode','fast',...
    'nextplot','replacechildren',...
    'projection',MapFigure.projection,...
    'CameraPosition',viewPnt.X,...
    'CameraPositionMode','manual',...
    'CameraUpVector',viewPnt.upvec,...
    'CameraUpVectorMode','manual',...
    'CameraViewAngle',viewPnt.fov,...
    'CameraViewAngleMode','manual',...
    'CameraTarget',viewPnt.tgt,...
    'CameraTargetMode','manual',...
    'xlim',[SimLmk.xMin SimLmk.xMax],...
    'ylim',[SimLmk.yMin SimLmk.yMax],...
    'zlim',[SimLmk.zMin SimLmk.zMax],...
    'xcolor','w',...
    'ycolor','w',...
    'zcolor','w',...
    'color' ,'w');

% SIMULATED OBJECTS
% Ground
[x,y] = meshgrid(SimLmk.xMin:2:SimLmk.xMax,SimLmk.yMin:2:SimLmk.yMax);
z = zeros(size(x));
MapFig.ground = surface(...
    'parent',MapFig.axes,...
    'XData',x,...
    'YData',y,...
    'ZData',z,...
    'FaceColor','none',...
    'EdgeColor',[.6 .8 .8],...
    'Marker','none');

% Robots
for rob = 1:numel(SimRob)
    % Simulated - green
    MapFig.simRob(rob) = patch(...
        'parent',       MapFig.axes,...
        'vertices',     SimRob(rob).graphics.vert,...
        'faces',        SimRob(rob).graphics.faces,...
        'facecolor',    'g',...
        'visible',      'on');

    MapFig.simRob(rob) = drawObject(MapFig.simRob(rob),SimRob(rob));
end


% Sensors
for sen = 1:numel(SimSen)
    % Simulated - green
    MapFig.simSen(sen) = patch(...
        'parent',       MapFig.axes,...
        'vertices',     SimSen(sen).graphics.vert,...
        'faces',        SimSen(sen).graphics.faces,...
        'facecolor',    'g',...
        'visible',      'on');

    R = SimRob(SimSen(sen).robot);
    F = composeFrames(R.frame,SimSen(sen).frame);
    MapFig.simSen(sen) = drawObject(MapFig.simSen(sen),SimSen(sen),F);
end

% landmarks - do not loop, draw all at once
MapFig.simLmk = line(...
    'xdata',        SimLmk.points(2,:),...
    'ydata',        SimLmk.points(3,:),...
    'zdata',        SimLmk.points(4,:),...
    'color',        'r',...
    'linestyle',    'none',...
    'marker',       '+');


% ESTIMATED OBJECTS
% robots
for rob = 1:numel(Rob)
    % Estimated - blue
    MapFig.estRob(rob) = patch(...
        'parent',       MapFig.axes,...
        'vertices',     Rob(rob).graphics.vert,...
        'faces',        Rob(rob).graphics.faces,...
        'facecolor',    'b',...
        'visible',      'on');

    MapFig.estRob(rob) = drawObject(MapFig.estRob(rob),Rob(rob));

end

% sensors
for sen = 1:numel(Sen)
    % Estimated - blue
    MapFig.estSen(sen) = patch(...
        'parent',       MapFig.axes,...
        'vertices',     Sen(sen).graphics.vert,...
        'faces',        Sen(sen).graphics.faces,...
        'facecolor',    'b',...
        'visible',      'on');

    R = Rob(Sen(sen).robot);
    F = composeFrames(R.frame,Sen(sen).frame);
    MapFig.estSen(sen) = drawObject(MapFig.estSen(sen),Sen(sen),F);

end

% landmarks
for lmk = 1:numel(Lmk)
    % mean - not visible by now
    MapFig.estLmk(lmk).mean = line(...
        'parent',       MapFig.axes,...
        'xdata',        [],...
        'ydata',        [],...
        'zdata',        [],...
        'linestyle',    'none',...
        'marker',       '.',...
        'visible',      'off');
    
    % ellipse - not visible by now
    MapFig.estLmk(lmk).ellipse = line(...
        'parent',       MapFig.axes,...
        'xdata',        [],...
        'ydata',        [],...
        'zdata',        [],...
        'linestyle',    '-',...
        'marker',       'none',...
        'visible',      'off');
end

    
    
