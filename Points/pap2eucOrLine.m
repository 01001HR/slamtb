function [p_or_line,PORLINE_pap] = pap2eucOrLine(pap)

% PAP2EUCORLINE Parallax Angle Parametrization to cartesian point
% conversion or line.
%   PAP2EUCORLINE(PAP) returns the cartesian 3D representation of the point
%   coded in Parallax Angle Parametrization if the PAP is in the complete
%   form (see below) or a 3D line from the main anchor in the direction of
%   the landmark if PAP is in the reduced form (see below).
%
%   PAP in a complete form is a 9-vector : PAP = [xm ym zm xa ya za el az
%   par]', and PAP in a reduced form is a 5-vector : PAP = [xm ym zm el
%   az]', where:
%       xm, ym, zm: main anchor: the 3D point PM 
%       xa, ya, za: associated anchor: the 3D point PA 
%       el, az: elevation and azimuth of the ray through P that starts at PM.
%       par: parallax angle: angle between the vector from point PM to P and the vector from PA to P.
%
%   [P,P_pap] = PAP2EUCORLINE(...) returns the Jacobian of the conversion wrt PAP.
%
%   See also eucorline2pap.

%   Copyright 2015 Ellon Paiva @ LAAS-CNRS.

[xm,xa,py,par,completeForm] = splitPap(pap);

if ~completeForm % reduced form: return line
    linelength = 10;

    if nargout == 1 
        vm = py2vec(py);  % unity vector from main
    else % jacobians
        [vm, VM_py] = py2vec(py);  % unity vector from main
        PORLINE_pap(1:3,:) = [eye(3,3) zeros(3,2)];
        PORLINE_pap(4:6,:) = [eye(1:3) linelength*VM_py];        
    end
    p_or_line(1:3,:) = xm;
    p_or_line(4:6,:) = xm + linelength * vm;
    
else % complete form: return point

    if nargout > 1 % jacobians
        pitch = py(1);
        yaw = py(2);
        
        P_xm = [...
                [ (sin(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(1) - xm(1)))/(sin(par)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2)) + (cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(1)*xm(3)*sin(pitch) - xa(1)*xa(3)*sin(pitch) + xa(3)*xm(1)*sin(pitch) - xm(1)*xm(3)*sin(pitch) + xa(2)^2*cos(pitch)*cos(yaw) + xa(3)^2*cos(pitch)*cos(yaw) + xm(2)^2*cos(pitch)*cos(yaw) + xm(3)^2*cos(pitch)*cos(yaw) - 2*xa(2)*xm(2)*cos(pitch)*cos(yaw) - 2*xa(3)*xm(3)*cos(pitch)*cos(yaw) - xa(1)*xa(2)*cos(pitch)*sin(yaw) + xa(1)*xm(2)*cos(pitch)*sin(yaw) + xa(2)*xm(1)*cos(pitch)*sin(yaw) - xm(1)*xm(2)*cos(pitch)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)) + 1,     (sin(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(2) - xm(2)))/(sin(par)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2)) + (cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(2)*xm(3)*sin(pitch) - xa(2)*xa(3)*sin(pitch) + xa(3)*xm(2)*sin(pitch) - xm(2)*xm(3)*sin(pitch) + xa(1)^2*cos(pitch)*sin(yaw) + xa(3)^2*cos(pitch)*sin(yaw) + xm(1)^2*cos(pitch)*sin(yaw) + xm(3)^2*cos(pitch)*sin(yaw) - xa(1)*xa(2)*cos(pitch)*cos(yaw) + xa(1)*xm(2)*cos(pitch)*cos(yaw) + xa(2)*xm(1)*cos(pitch)*cos(yaw) - xm(1)*xm(2)*cos(pitch)*cos(yaw) - 2*xa(1)*xm(1)*cos(pitch)*sin(yaw) - 2*xa(3)*xm(3)*cos(pitch)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)),     (sin(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(3) - xm(3)))/(sin(par)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2)) + (cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(1)^2*sin(pitch) + xa(2)^2*sin(pitch) + xm(1)^2*sin(pitch) + xm(2)^2*sin(pitch) - 2*xa(1)*xm(1)*sin(pitch) - 2*xa(2)*xm(2)*sin(pitch) - xa(1)*xa(3)*cos(pitch)*cos(yaw) + xa(1)*xm(3)*cos(pitch)*cos(yaw) + xa(3)*xm(1)*cos(pitch)*cos(yaw) - xm(1)*xm(3)*cos(pitch)*cos(yaw) - xa(2)*xa(3)*cos(pitch)*sin(yaw) + xa(2)*xm(3)*cos(pitch)*sin(yaw) + xa(3)*xm(2)*cos(pitch)*sin(yaw) - xm(2)*xm(3)*cos(pitch)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))];...
                [     (sin(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(1) - xm(1)))/(sin(par)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2)) + (cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(1)*xm(3)*sin(pitch) - xa(1)*xa(3)*sin(pitch) + xa(3)*xm(1)*sin(pitch) - xm(1)*xm(3)*sin(pitch) + xa(2)^2*cos(pitch)*cos(yaw) + xa(3)^2*cos(pitch)*cos(yaw) + xm(2)^2*cos(pitch)*cos(yaw) + xm(3)^2*cos(pitch)*cos(yaw) - 2*xa(2)*xm(2)*cos(pitch)*cos(yaw) - 2*xa(3)*xm(3)*cos(pitch)*cos(yaw) - xa(1)*xa(2)*cos(pitch)*sin(yaw) + xa(1)*xm(2)*cos(pitch)*sin(yaw) + xa(2)*xm(1)*cos(pitch)*sin(yaw) - xm(1)*xm(2)*cos(pitch)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)), (sin(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(2) - xm(2)))/(sin(par)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2)) + (cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(2)*xm(3)*sin(pitch) - xa(2)*xa(3)*sin(pitch) + xa(3)*xm(2)*sin(pitch) - xm(2)*xm(3)*sin(pitch) + xa(1)^2*cos(pitch)*sin(yaw) + xa(3)^2*cos(pitch)*sin(yaw) + xm(1)^2*cos(pitch)*sin(yaw) + xm(3)^2*cos(pitch)*sin(yaw) - xa(1)*xa(2)*cos(pitch)*cos(yaw) + xa(1)*xm(2)*cos(pitch)*cos(yaw) + xa(2)*xm(1)*cos(pitch)*cos(yaw) - xm(1)*xm(2)*cos(pitch)*cos(yaw) - 2*xa(1)*xm(1)*cos(pitch)*sin(yaw) - 2*xa(3)*xm(3)*cos(pitch)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)) + 1,     (sin(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(3) - xm(3)))/(sin(par)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2)) + (cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(1)^2*sin(pitch) + xa(2)^2*sin(pitch) + xm(1)^2*sin(pitch) + xm(2)^2*sin(pitch) - 2*xa(1)*xm(1)*sin(pitch) - 2*xa(2)*xm(2)*sin(pitch) - xa(1)*xa(3)*cos(pitch)*cos(yaw) + xa(1)*xm(3)*cos(pitch)*cos(yaw) + xa(3)*xm(1)*cos(pitch)*cos(yaw) - xm(1)*xm(3)*cos(pitch)*cos(yaw) - xa(2)*xa(3)*cos(pitch)*sin(yaw) + xa(2)*xm(3)*cos(pitch)*sin(yaw) + xa(3)*xm(2)*cos(pitch)*sin(yaw) - xm(2)*xm(3)*cos(pitch)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))];...
                [     (sin(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(1) - xm(1)))/(sin(par)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2)) + (cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(1)*xm(3)*sin(pitch) - xa(1)*xa(3)*sin(pitch) + xa(3)*xm(1)*sin(pitch) - xm(1)*xm(3)*sin(pitch) + xa(2)^2*cos(pitch)*cos(yaw) + xa(3)^2*cos(pitch)*cos(yaw) + xm(2)^2*cos(pitch)*cos(yaw) + xm(3)^2*cos(pitch)*cos(yaw) - 2*xa(2)*xm(2)*cos(pitch)*cos(yaw) - 2*xa(3)*xm(3)*cos(pitch)*cos(yaw) - xa(1)*xa(2)*cos(pitch)*sin(yaw) + xa(1)*xm(2)*cos(pitch)*sin(yaw) + xa(2)*xm(1)*cos(pitch)*sin(yaw) - xm(1)*xm(2)*cos(pitch)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)),     (sin(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(2) - xm(2)))/(sin(par)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2)) + (cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(2)*xm(3)*sin(pitch) - xa(2)*xa(3)*sin(pitch) + xa(3)*xm(2)*sin(pitch) - xm(2)*xm(3)*sin(pitch) + xa(1)^2*cos(pitch)*sin(yaw) + xa(3)^2*cos(pitch)*sin(yaw) + xm(1)^2*cos(pitch)*sin(yaw) + xm(3)^2*cos(pitch)*sin(yaw) - xa(1)*xa(2)*cos(pitch)*cos(yaw) + xa(1)*xm(2)*cos(pitch)*cos(yaw) + xa(2)*xm(1)*cos(pitch)*cos(yaw) - xm(1)*xm(2)*cos(pitch)*cos(yaw) - 2*xa(1)*xm(1)*cos(pitch)*sin(yaw) - 2*xa(3)*xm(3)*cos(pitch)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)), (sin(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(3) - xm(3)))/(sin(par)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2)) + (cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(1)^2*sin(pitch) + xa(2)^2*sin(pitch) + xm(1)^2*sin(pitch) + xm(2)^2*sin(pitch) - 2*xa(1)*xm(1)*sin(pitch) - 2*xa(2)*xm(2)*sin(pitch) - xa(1)*xa(3)*cos(pitch)*cos(yaw) + xa(1)*xm(3)*cos(pitch)*cos(yaw) + xa(3)*xm(1)*cos(pitch)*cos(yaw) - xm(1)*xm(3)*cos(pitch)*cos(yaw) - xa(2)*xa(3)*cos(pitch)*sin(yaw) + xa(2)*xm(3)*cos(pitch)*sin(yaw) + xa(3)*xm(2)*cos(pitch)*sin(yaw) - xm(2)*xm(3)*cos(pitch)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)) + 1] ...
               ];
        
        P_xa = [...
                [ - (sin(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(1) - xm(1)))/(sin(par)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2)) - (cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(1)*xm(3)*sin(pitch) - xa(1)*xa(3)*sin(pitch) + xa(3)*xm(1)*sin(pitch) - xm(1)*xm(3)*sin(pitch) + xa(2)^2*cos(pitch)*cos(yaw) + xa(3)^2*cos(pitch)*cos(yaw) + xm(2)^2*cos(pitch)*cos(yaw) + xm(3)^2*cos(pitch)*cos(yaw) - 2*xa(2)*xm(2)*cos(pitch)*cos(yaw) - 2*xa(3)*xm(3)*cos(pitch)*cos(yaw) - xa(1)*xa(2)*cos(pitch)*sin(yaw) + xa(1)*xm(2)*cos(pitch)*sin(yaw) + xa(2)*xm(1)*cos(pitch)*sin(yaw) - xm(1)*xm(2)*cos(pitch)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)), - (sin(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(2) - xm(2)))/(sin(par)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2)) - (cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(2)*xm(3)*sin(pitch) - xa(2)*xa(3)*sin(pitch) + xa(3)*xm(2)*sin(pitch) - xm(2)*xm(3)*sin(pitch) + xa(1)^2*cos(pitch)*sin(yaw) + xa(3)^2*cos(pitch)*sin(yaw) + xm(1)^2*cos(pitch)*sin(yaw) + xm(3)^2*cos(pitch)*sin(yaw) - xa(1)*xa(2)*cos(pitch)*cos(yaw) + xa(1)*xm(2)*cos(pitch)*cos(yaw) + xa(2)*xm(1)*cos(pitch)*cos(yaw) - xm(1)*xm(2)*cos(pitch)*cos(yaw) - 2*xa(1)*xm(1)*cos(pitch)*sin(yaw) - 2*xa(3)*xm(3)*cos(pitch)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)), - (sin(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(3) - xm(3)))/(sin(par)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2)) - (cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(1)^2*sin(pitch) + xa(2)^2*sin(pitch) + xm(1)^2*sin(pitch) + xm(2)^2*sin(pitch) - 2*xa(1)*xm(1)*sin(pitch) - 2*xa(2)*xm(2)*sin(pitch) - xa(1)*xa(3)*cos(pitch)*cos(yaw) + xa(1)*xm(3)*cos(pitch)*cos(yaw) + xa(3)*xm(1)*cos(pitch)*cos(yaw) - xm(1)*xm(3)*cos(pitch)*cos(yaw) - xa(2)*xa(3)*cos(pitch)*sin(yaw) + xa(2)*xm(3)*cos(pitch)*sin(yaw) + xa(3)*xm(2)*cos(pitch)*sin(yaw) - xm(2)*xm(3)*cos(pitch)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))];...
                [ - (sin(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(1) - xm(1)))/(sin(par)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2)) - (cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(1)*xm(3)*sin(pitch) - xa(1)*xa(3)*sin(pitch) + xa(3)*xm(1)*sin(pitch) - xm(1)*xm(3)*sin(pitch) + xa(2)^2*cos(pitch)*cos(yaw) + xa(3)^2*cos(pitch)*cos(yaw) + xm(2)^2*cos(pitch)*cos(yaw) + xm(3)^2*cos(pitch)*cos(yaw) - 2*xa(2)*xm(2)*cos(pitch)*cos(yaw) - 2*xa(3)*xm(3)*cos(pitch)*cos(yaw) - xa(1)*xa(2)*cos(pitch)*sin(yaw) + xa(1)*xm(2)*cos(pitch)*sin(yaw) + xa(2)*xm(1)*cos(pitch)*sin(yaw) - xm(1)*xm(2)*cos(pitch)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)), - (sin(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(2) - xm(2)))/(sin(par)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2)) - (cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(2)*xm(3)*sin(pitch) - xa(2)*xa(3)*sin(pitch) + xa(3)*xm(2)*sin(pitch) - xm(2)*xm(3)*sin(pitch) + xa(1)^2*cos(pitch)*sin(yaw) + xa(3)^2*cos(pitch)*sin(yaw) + xm(1)^2*cos(pitch)*sin(yaw) + xm(3)^2*cos(pitch)*sin(yaw) - xa(1)*xa(2)*cos(pitch)*cos(yaw) + xa(1)*xm(2)*cos(pitch)*cos(yaw) + xa(2)*xm(1)*cos(pitch)*cos(yaw) - xm(1)*xm(2)*cos(pitch)*cos(yaw) - 2*xa(1)*xm(1)*cos(pitch)*sin(yaw) - 2*xa(3)*xm(3)*cos(pitch)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)), - (sin(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(3) - xm(3)))/(sin(par)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2)) - (cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(1)^2*sin(pitch) + xa(2)^2*sin(pitch) + xm(1)^2*sin(pitch) + xm(2)^2*sin(pitch) - 2*xa(1)*xm(1)*sin(pitch) - 2*xa(2)*xm(2)*sin(pitch) - xa(1)*xa(3)*cos(pitch)*cos(yaw) + xa(1)*xm(3)*cos(pitch)*cos(yaw) + xa(3)*xm(1)*cos(pitch)*cos(yaw) - xm(1)*xm(3)*cos(pitch)*cos(yaw) - xa(2)*xa(3)*cos(pitch)*sin(yaw) + xa(2)*xm(3)*cos(pitch)*sin(yaw) + xa(3)*xm(2)*cos(pitch)*sin(yaw) - xm(2)*xm(3)*cos(pitch)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))];...
                [ - (sin(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(1) - xm(1)))/(sin(par)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2)) - (cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(1)*xm(3)*sin(pitch) - xa(1)*xa(3)*sin(pitch) + xa(3)*xm(1)*sin(pitch) - xm(1)*xm(3)*sin(pitch) + xa(2)^2*cos(pitch)*cos(yaw) + xa(3)^2*cos(pitch)*cos(yaw) + xm(2)^2*cos(pitch)*cos(yaw) + xm(3)^2*cos(pitch)*cos(yaw) - 2*xa(2)*xm(2)*cos(pitch)*cos(yaw) - 2*xa(3)*xm(3)*cos(pitch)*cos(yaw) - xa(1)*xa(2)*cos(pitch)*sin(yaw) + xa(1)*xm(2)*cos(pitch)*sin(yaw) + xa(2)*xm(1)*cos(pitch)*sin(yaw) - xm(1)*xm(2)*cos(pitch)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)), - (sin(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(2) - xm(2)))/(sin(par)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2)) - (cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(2)*xm(3)*sin(pitch) - xa(2)*xa(3)*sin(pitch) + xa(3)*xm(2)*sin(pitch) - xm(2)*xm(3)*sin(pitch) + xa(1)^2*cos(pitch)*sin(yaw) + xa(3)^2*cos(pitch)*sin(yaw) + xm(1)^2*cos(pitch)*sin(yaw) + xm(3)^2*cos(pitch)*sin(yaw) - xa(1)*xa(2)*cos(pitch)*cos(yaw) + xa(1)*xm(2)*cos(pitch)*cos(yaw) + xa(2)*xm(1)*cos(pitch)*cos(yaw) - xm(1)*xm(2)*cos(pitch)*cos(yaw) - 2*xa(1)*xm(1)*cos(pitch)*sin(yaw) - 2*xa(3)*xm(3)*cos(pitch)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)), - (sin(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(3) - xm(3)))/(sin(par)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2)) - (cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(1)^2*sin(pitch) + xa(2)^2*sin(pitch) + xm(1)^2*sin(pitch) + xm(2)^2*sin(pitch) - 2*xa(1)*xm(1)*sin(pitch) - 2*xa(2)*xm(2)*sin(pitch) - xa(1)*xa(3)*cos(pitch)*cos(yaw) + xa(1)*xm(3)*cos(pitch)*cos(yaw) + xa(3)*xm(1)*cos(pitch)*cos(yaw) - xm(1)*xm(3)*cos(pitch)*cos(yaw) - xa(2)*xa(3)*cos(pitch)*sin(yaw) + xa(2)*xm(3)*cos(pitch)*sin(yaw) + xa(3)*xm(2)*cos(pitch)*sin(yaw) - xm(2)*xm(3)*cos(pitch)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))] ...
               ];        

        P_py = [...
                [ -(cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(3)*cos(pitch) - xm(3)*cos(pitch) - xa(1)*cos(yaw)*sin(pitch) + xm(1)*cos(yaw)*sin(pitch) - xa(2)*sin(pitch)*sin(yaw) + xm(2)*sin(pitch)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2)), -(cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*cos(pitch)*(xa(2)*cos(yaw) - xm(2)*cos(yaw) - xa(1)*sin(yaw) + xm(1)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2))];...
                [ -(cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(3)*cos(pitch) - xm(3)*cos(pitch) - xa(1)*cos(yaw)*sin(pitch) + xm(1)*cos(yaw)*sin(pitch) - xa(2)*sin(pitch)*sin(yaw) + xm(2)*sin(pitch)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2)), -(cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*cos(pitch)*(xa(2)*cos(yaw) - xm(2)*cos(yaw) - xa(1)*sin(yaw) + xm(1)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2))];...
                [ -(cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*(xa(3)*cos(pitch) - xm(3)*cos(pitch) - xa(1)*cos(yaw)*sin(pitch) + xm(1)*cos(yaw)*sin(pitch) - xa(2)*sin(pitch)*sin(yaw) + xm(2)*sin(pitch)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2)), -(cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*cos(pitch)*(xa(2)*cos(yaw) - xm(2)*cos(yaw) - xa(1)*sin(yaw) + xm(1)*sin(yaw)))/(sin(par)*(1 - (xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))^2/((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2))^(1/2))] ...
               ];

        P_par = [... 
                 (sin(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*cos(par)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2))/sin(par)^2 - (cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2))/sin(par);...
                 (sin(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*cos(par)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2))/sin(par)^2 - (cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2))/sin(par);...
                 (sin(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*cos(par)*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2))/sin(par)^2 - (cos(par - acos((xa(3)*sin(pitch) - xm(3)*sin(pitch) + xa(1)*cos(pitch)*cos(yaw) - xm(1)*cos(pitch)*cos(yaw) + xa(2)*cos(pitch)*sin(yaw) - xm(2)*cos(pitch)*sin(yaw))/(xa(1)^2 - 2*xa(1)*xm(1) + xa(2)^2 - 2*xa(2)*xm(2) + xa(3)^2 - 2*xa(3)*xm(3) + xm(1)^2 + xm(2)^2 + xm(3)^2)^(1/2)))*((xa(1) - xm(1))^2 + (xa(2) - xm(2))^2 + (xa(3) - xm(3))^2)^(1/2))/sin(par) ...
                ];

        PORLINE_pap = [P_xm P_xa P_py P_par];

    end
    
    vm = py2vec(py);  % unity vector from main
    vm2a = unitVectorBetweenPoints(xm,xa);

    phi = acos(dot(vm,vm2a));

    d = (sin(par + phi) / sin(par)) * norm(xa - xm);

    p_or_line(1:3,:) = xm + d;

        
end

return

%% test jacobians

syms xm1 xm2 xm3 xa1 xa2 xa3 pitch yaw par real
pap = [xm1 xm2 xm3 xa1 xa2 xa3 pitch yaw par]';
% xm  = pap(1:3,:);   
% xa  = pap(4:6,:);   
% py  = pap(7:8,:);   
% par = pap(9,:);     
% vm = py2vec(py);
% vm2a = unitVectorBetweenPoints(xm,xa);
% phi = acos(dot(vm,vm2a));
% d = (sin(par + phi) / sin(par)) * norm(xa - xm);
% p = xm + d;
% simplify(jacobian(p,xm))
% simplify(jacobian(p,xa))
% simplify(jacobian(p,py))
% simplify(jacobian(p,par))

[euc,EUC_pap] = pap2euc(pap);
simplify(EUC_pap - jacobian(euc,pap)) % it must return a matrix of zeros. Too slow!



% ========== End of function - Start GPL license ==========


%   # START GPL LICENSE

%---------------------------------------------------------------------
%
%   This file is part of SLAMTB, a SLAM toolbox for Matlab.
%
%   SLAMTB is free software: you can redistribute it and/or modify
%   it under the terms of the GNU General Public License as published by
%   the Free Software Foundation, either version 3 of the License, or
%   (at your option) any later version.
%
%   SLAMTB is distributed in the hope that it will be useful,
%   but WITHOUT ANY WARRANTY; without even the implied warranty of
%   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%   GNU General Public License for more details.
%
%   You should have received a copy of the GNU General Public License
%   along with SLAMTB.  If not, see <http://www.gnu.org/licenses/>.
%
%---------------------------------------------------------------------

%   SLAMTB is Copyright:
%   Copyright (c) 2008-2010, Joan Sola @ LAAS-CNRS,
%   Copyright (c) 2010-2013, Joan Sola,
%   Copyright (c) 2014-2015, Joan Sola @ IRI-UPC-CSIC,
%   SLAMTB is Copyright 2009 
%   by Joan Sola, Teresa Vidal-Calleja, David Marquez and Jean Marie Codol
%   @ LAAS-CNRS.
%   See on top of this file for its particular copyright.

%   # END GPL LICENSE

